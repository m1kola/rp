// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jim-minter/rp/pkg/api (interfaces: Version)

// Package mock_api is a generated GoMock package.
package mock_api

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	api "github.com/jim-minter/rp/pkg/api"
)

// MockVersion is a mock of Version interface
type MockVersion struct {
	ctrl     *gomock.Controller
	recorder *MockVersionMockRecorder
}

// MockVersionMockRecorder is the mock recorder for MockVersion
type MockVersionMockRecorder struct {
	mock *MockVersion
}

// NewMockVersion creates a new mock instance
func NewMockVersion(ctrl *gomock.Controller) *MockVersion {
	mock := &MockVersion{ctrl: ctrl}
	mock.recorder = &MockVersionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVersion) EXPECT() *MockVersionMockRecorder {
	return m.recorder
}

// OpenShiftCluster mocks base method
func (m *MockVersion) OpenShiftCluster() api.OpenShiftClusterInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OpenShiftCluster")
	ret0, _ := ret[0].(api.OpenShiftClusterInterface)
	return ret0
}

// OpenShiftCluster indicates an expected call of OpenShiftCluster
func (mr *MockVersionMockRecorder) OpenShiftCluster() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OpenShiftCluster", reflect.TypeOf((*MockVersion)(nil).OpenShiftCluster))
}

// OpenShiftClusterCredentials mocks base method
func (m *MockVersion) OpenShiftClusterCredentials() api.OpenShiftClusterToExternal {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OpenShiftClusterCredentials")
	ret0, _ := ret[0].(api.OpenShiftClusterToExternal)
	return ret0
}

// OpenShiftClusterCredentials indicates an expected call of OpenShiftClusterCredentials
func (mr *MockVersionMockRecorder) OpenShiftClusterCredentials() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OpenShiftClusterCredentials", reflect.TypeOf((*MockVersion)(nil).OpenShiftClusterCredentials))
}
